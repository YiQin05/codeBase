/*
    *
    * Wijmo Library 5.20183.550
    * http://wijmo.com/
    *
    * Copyright(c) GrapeCity, Inc.  All rights reserved.
    *
    * Licensed under the GrapeCity Commercial License.
    * sales@wijmo.com
    * wijmo.com/products/wijmo-5/license/
    *
    */
import*as wjcOlap from"wijmo/wijmo.olap";var __glob="undefined"!=typeof window?window:self;import{Component,NgModule}from"@angular/core";import{ElementRef,Injector,Optional,forwardRef}from"@angular/core";import{Inject,SkipSelf}from"@angular/core";import{CommonModule}from"@angular/common";import{NG_VALUE_ACCESSOR}from"@angular/forms";import{WjDirectiveBehavior,WjDirectiveBaseModule,WjValueAccessorFactory}from"wijmo/wijmo.angular2.directiveBase";export var wjPivotGridMeta={selector:"wj-pivot-grid",template:``,inputs:["wjModelProperty","isDisabled","newRowAtTop","allowAddNew","allowDelete","allowDragging","allowMerging","allowResizing","allowSorting","quickAutoSize","autoScroll","autoSearch","autoSizeMode","autoGenerateColumns","childItemsPath","groupHeaderFormat","headersVisibility","showSelectedHeaders","showMarquee","itemFormatter","isReadOnly","imeEnabled","mergeManager","selectionMode","showGroups","showSort","showDropDown","showAlternatingRows","showErrors","validateEdits","treeIndent","itemsSource","autoClipboard","frozenRows","frozenColumns","cloneFrozenCells","deferResizing","sortRowIndex","stickyHeaders","preserveSelectedState","preserveOutlineState","keyActionTab","keyActionEnter","rowHeaderPath","virtualizationThreshold","showDetailOnDoubleClick","customContextMenu","collapsibleSubtotals","centerHeadersVertically","showColumnFieldHeaders","showRowFieldHeaders"],outputs:["initialized","gotFocusNg: gotFocus","lostFocusNg: lostFocus","beginningEditNg: beginningEdit","cellEditEndedNg: cellEditEnded","cellEditEndingNg: cellEditEnding","prepareCellForEditNg: prepareCellForEdit","formatItemNg: formatItem","resizingColumnNg: resizingColumn","resizedColumnNg: resizedColumn","autoSizingColumnNg: autoSizingColumn","autoSizedColumnNg: autoSizedColumn","draggingColumnNg: draggingColumn","draggingColumnOverNg: draggingColumnOver","draggedColumnNg: draggedColumn","sortingColumnNg: sortingColumn","sortedColumnNg: sortedColumn","resizingRowNg: resizingRow","resizedRowNg: resizedRow","autoSizingRowNg: autoSizingRow","autoSizedRowNg: autoSizedRow","draggingRowNg: draggingRow","draggingRowOverNg: draggingRowOver","draggedRowNg: draggedRow","deletingRowNg: deletingRow","deletedRowNg: deletedRow","loadingRowsNg: loadingRows","loadedRowsNg: loadedRows","rowEditStartingNg: rowEditStarting","rowEditStartedNg: rowEditStarted","rowEditEndingNg: rowEditEnding","rowEditEndedNg: rowEditEnded","rowAddedNg: rowAdded","groupCollapsedChangedNg: groupCollapsedChanged","groupCollapsedChangingNg: groupCollapsedChanging","itemsSourceChangedNg: itemsSourceChanged","selectionChangingNg: selectionChanging","selectionChangedNg: selectionChanged","scrollPositionChangedNg: scrollPositionChanged","updatingViewNg: updatingView","updatedViewNg: updatedView","updatingLayoutNg: updatingLayout","updatedLayoutNg: updatedLayout","pastingNg: pasting","pastedNg: pasted","pastingCellNg: pastingCell","pastedCellNg: pastedCell","copyingNg: copying","copiedNg: copied"],providers:[{provide:NG_VALUE_ACCESSOR,useFactory:WjValueAccessorFactory,multi:!0,deps:["WjComponent"]}]};export class WjPivotGrid extends wjcOlap.PivotGrid{constructor(e,t,o){super(WjDirectiveBehavior.getHostElement(e,t)),this.isInitialized=!1;this._wjBehaviour=WjDirectiveBehavior.attach(this,e,t,o);this.created()}created(){}ngOnInit(){this._wjBehaviour.ngOnInit()}ngAfterViewInit(){this._wjBehaviour.ngAfterViewInit()}ngOnDestroy(){this._wjBehaviour.ngOnDestroy()}addEventListener(e,t,o,i=!1){let r=WjDirectiveBehavior,a=r.ngZone;a&&r.outsideZoneEvents[t]?a.runOutsideAngular(()=>{super.addEventListener(e,t,o,i)}):super.addEventListener(e,t,o,i)}};WjPivotGrid.meta={outputs:wjPivotGridMeta.outputs},WjPivotGrid.decorators=[{type:Component,args:[{selector:wjPivotGridMeta.selector,template:wjPivotGridMeta.template,inputs:wjPivotGridMeta.inputs,outputs:wjPivotGridMeta.outputs,providers:[{provide:"WjComponent",useExisting:forwardRef(()=>WjPivotGrid)},...wjPivotGridMeta.providers]}]}],WjPivotGrid.ctorParameters=(()=>[{type:ElementRef,decorators:[{type:Inject,args:[ElementRef]}]},{type:Injector,decorators:[{type:Inject,args:[Injector]}]},{type:void 0,decorators:[{type:Inject,args:["WjComponent"]},{type:SkipSelf},{type:Optional}]}]);export var wjPivotChartMeta={selector:"wj-pivot-chart",template:``,inputs:["wjModelProperty","isDisabled","chartType","showHierarchicalAxes","showTotals","showTitle","showLegend","legendPosition","stacking","maxSeries","maxPoints","itemsSource","header","footer","headerStyle","footerStyle"],outputs:["initialized","gotFocusNg: gotFocus","lostFocusNg: lostFocus"],providers:[{provide:NG_VALUE_ACCESSOR,useFactory:WjValueAccessorFactory,multi:!0,deps:["WjComponent"]}]};export class WjPivotChart extends wjcOlap.PivotChart{constructor(e,t,o){super(WjDirectiveBehavior.getHostElement(e,t)),this.isInitialized=!1;this._wjBehaviour=WjDirectiveBehavior.attach(this,e,t,o);this.created()}created(){}ngOnInit(){this._wjBehaviour.ngOnInit()}ngAfterViewInit(){this._wjBehaviour.ngAfterViewInit()}ngOnDestroy(){this._wjBehaviour.ngOnDestroy()}addEventListener(e,t,o,i=!1){let r=WjDirectiveBehavior,a=r.ngZone;a&&r.outsideZoneEvents[t]?a.runOutsideAngular(()=>{super.addEventListener(e,t,o,i)}):super.addEventListener(e,t,o,i)}};WjPivotChart.meta={outputs:wjPivotChartMeta.outputs},WjPivotChart.decorators=[{type:Component,args:[{selector:wjPivotChartMeta.selector,template:wjPivotChartMeta.template,inputs:wjPivotChartMeta.inputs,outputs:wjPivotChartMeta.outputs,providers:[{provide:"WjComponent",useExisting:forwardRef(()=>WjPivotChart)},...wjPivotChartMeta.providers]}]}],WjPivotChart.ctorParameters=(()=>[{type:ElementRef,decorators:[{type:Inject,args:[ElementRef]}]},{type:Injector,decorators:[{type:Inject,args:[Injector]}]},{type:void 0,decorators:[{type:Inject,args:["WjComponent"]},{type:SkipSelf},{type:Optional}]}]);export var wjPivotPanelMeta={selector:"wj-pivot-panel",template:``,inputs:["wjModelProperty","isDisabled","autoGenerateFields","viewDefinition","engine","itemsSource","showFieldIcons","restrictDragging"],outputs:["initialized","gotFocusNg: gotFocus","lostFocusNg: lostFocus","itemsSourceChangedNg: itemsSourceChanged","viewDefinitionChangedNg: viewDefinitionChanged","updatingViewNg: updatingView","updatedViewNg: updatedView"],providers:[{provide:NG_VALUE_ACCESSOR,useFactory:WjValueAccessorFactory,multi:!0,deps:["WjComponent"]}]};export class WjPivotPanel extends wjcOlap.PivotPanel{constructor(e,t,o){super(WjDirectiveBehavior.getHostElement(e,t)),this.isInitialized=!1;this._wjBehaviour=WjDirectiveBehavior.attach(this,e,t,o);this.created()}created(){}ngOnInit(){this._wjBehaviour.ngOnInit()}ngAfterViewInit(){this._wjBehaviour.ngAfterViewInit()}ngOnDestroy(){this._wjBehaviour.ngOnDestroy()}addEventListener(e,t,o,i=!1){let r=WjDirectiveBehavior,a=r.ngZone;a&&r.outsideZoneEvents[t]?a.runOutsideAngular(()=>{super.addEventListener(e,t,o,i)}):super.addEventListener(e,t,o,i)}};WjPivotPanel.meta={outputs:wjPivotPanelMeta.outputs},WjPivotPanel.decorators=[{type:Component,args:[{selector:wjPivotPanelMeta.selector,template:wjPivotPanelMeta.template,inputs:wjPivotPanelMeta.inputs,outputs:wjPivotPanelMeta.outputs,providers:[{provide:"WjComponent",useExisting:forwardRef(()=>WjPivotPanel)},...wjPivotPanelMeta.providers]}]}],WjPivotPanel.ctorParameters=(()=>[{type:ElementRef,decorators:[{type:Inject,args:[ElementRef]}]},{type:Injector,decorators:[{type:Inject,args:[Injector]}]},{type:void 0,decorators:[{type:Inject,args:["WjComponent"]},{type:SkipSelf},{type:Optional}]}]);export var wjSlicerMeta={selector:"wj-slicer",template:``,inputs:["wjModelProperty","isDisabled","field","showHeader","header","showCheckboxes","multiSelect"],outputs:["initialized","gotFocusNg: gotFocus","lostFocusNg: lostFocus"],providers:[{provide:NG_VALUE_ACCESSOR,useFactory:WjValueAccessorFactory,multi:!0,deps:["WjComponent"]}]};export class WjSlicer extends wjcOlap.Slicer{constructor(e,t,o){super(WjDirectiveBehavior.getHostElement(e,t)),this.isInitialized=!1;this._wjBehaviour=WjDirectiveBehavior.attach(this,e,t,o);this.created()}created(){}ngOnInit(){this._wjBehaviour.ngOnInit()}ngAfterViewInit(){this._wjBehaviour.ngAfterViewInit()}ngOnDestroy(){this._wjBehaviour.ngOnDestroy()}addEventListener(e,t,o,i=!1){let r=WjDirectiveBehavior,a=r.ngZone;a&&r.outsideZoneEvents[t]?a.runOutsideAngular(()=>{super.addEventListener(e,t,o,i)}):super.addEventListener(e,t,o,i)}};WjSlicer.meta={outputs:wjSlicerMeta.outputs},WjSlicer.decorators=[{type:Component,args:[{selector:wjSlicerMeta.selector,template:wjSlicerMeta.template,inputs:wjSlicerMeta.inputs,outputs:wjSlicerMeta.outputs,providers:[{provide:"WjComponent",useExisting:forwardRef(()=>WjSlicer)},...wjSlicerMeta.providers]}]}],WjSlicer.ctorParameters=(()=>[{type:ElementRef,decorators:[{type:Inject,args:[ElementRef]}]},{type:Injector,decorators:[{type:Inject,args:[Injector]}]},{type:void 0,decorators:[{type:Inject,args:["WjComponent"]},{type:SkipSelf},{type:Optional}]}]);let moduleExports=[WjPivotGrid,WjPivotChart,WjPivotPanel,WjSlicer];export class WjOlapModule{};WjOlapModule.decorators=[{type:NgModule,args:[{imports:[WjDirectiveBaseModule,CommonModule],declarations:[...moduleExports],exports:[...moduleExports]}]}],WjOlapModule.ctorParameters=(()=>[]);