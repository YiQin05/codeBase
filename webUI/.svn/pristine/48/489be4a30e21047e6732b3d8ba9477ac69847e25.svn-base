<template>
    <div class="container">
        <el-form :inline="true" ref="form1" :model="addCellList" :rules="rules" class="demo-form-inline demo-ruleForm" size="mini" label-width="120px">
            <!-- string类型 -->
            <el-form-item label="基站ID" prop="bscID">
                <el-input v-model="addCellList.bscID"></el-input>
            </el-form-item>
            <!-- string类型 -->
            <el-form-item label="小区ID" prop="cellID">
                <el-input v-model="addCellList.cellID" ></el-input>
            </el-form-item>
        </el-form>
        <el-form :inline="true" :rules="rules" :model="addCellList" ref="form2" class="demo-form-inline demo-ruleForm" size="mini" label-width="120px">
             <!-- string类型 -->
            <el-form-item label="基站名称" prop="bscName">
                <el-input v-model="addCellList.bscName"></el-input>
            </el-form-item>
            <!-- string类型 -->
            <el-form-item label="小区名称" prop="cellName">
                <el-input v-model="addCellList.cellName"></el-input>
            </el-form-item>
        </el-form>
        <el-form :inline="true" :model="addCellList" ref="form3" :rules="rules" class="demo-form-inline demo-ruleForm" size="mini" label-width="120px">
            <!-- string类型 -->
            <el-form-item label="小区lac" prop="lac">
                <el-input v-model="addCellList.lac"></el-input>
            </el-form-item>
            <!-- double -->
            <el-form-item label="经度" prop="longitude">
                <el-input v-model="addCellList.longitude"></el-input>
            </el-form-item>
        </el-form>
        <el-form :inline="true" ref="form4" :model="addCellList" :rules="rules" class="demo-form-inline  demo-ruleForm" size="mini" label-width="120px">
            <!-- double -->
            <el-form-item label="纬度" prop="latitude">
                <el-input v-model="addCellList.latitude"></el-input>
            </el-form-item>
            <!-- double -->
            <el-form-item label="海拔高度" prop="altitude">
                <el-input v-model="addCellList.altitude"></el-input>
            </el-form-item>
        </el-form>
        <el-form :inline="true" ref="form5" :model="addCellList" :rules="rules" class="demo-form-inline  demo-ruleForm" size="mini" label-width="120px">
            <!-- float类型 -->
            <el-form-item label="下倾角" prop="elevationAngle">
                <el-input v-model="addCellList.elevationAngle"></el-input>
            </el-form-item>
            <!-- float类型 -->
            <el-form-item label="方向角" prop="directAngle">
                <el-input v-model="addCellList.directAngle"></el-input>
            </el-form-item>
        </el-form>
        <!-- <el-form :inline="true" ref="form6" :model="addCellList" :rules="rules" class="demo-form-inline  demo-ruleForm" size="mini" label-width="120px">
            float类型
            <el-form-item label="覆盖方向角起点" prop="coverAngleBegin">
                <el-input v-model="addCellList.coverAngleBegin"></el-input>
            </el-form-item>
            float类型
            <el-form-item label="覆盖方向角终点" prop="coverAngleEnd">
                <el-input v-model="addCellList.coverAngleEnd"></el-input>
            </el-form-item>
        </el-form> -->
        <el-form :inline="true" ref="form7" :model="addCellList" :rules="rules" class="demo-form-inline  demo-ruleForm" size="mini" label-width="120px">
            <!-- int -->
            <el-form-item label="覆盖距离" prop="coverDistance" class="single">
                <el-input v-model="addCellList.coverDistance"></el-input>
            </el-form-item>
        </el-form>
        <div class="cellButton">
          <el-button size="mini" type="info" @click="clear" class="submitBtn">重置</el-button>
          <el-button size="mini" type="primary" @click="handleClick">提交</el-button>
        </div>
          <div class="editMap">
            <div v-if="isOpenMap" style="border:solid lightblue 1px;height:100%;marginTop:10px">
              <el-amap vid="amapCameraAddCell" :events="addCellMapEvents">
                <el-amap-marker :position="positionCell"></el-amap-marker>
              </el-amap>
            </div>
          </div>
    </div>
</template>
<script>
export default {
  data () {
    var numberOnly = (rule, value, callback) => {
      if (isNaN(this.addCellList[rule.fullField])) {
        callback(new Error('只能填数字！'))
      } else if (parseFloat(this.addCellList[rule.fullField]) < 0) {
        callback(new Error('不能小于0！'))
      } else {
        this.addCellList[rule.fullField] = parseFloat(
          this.addCellList[rule.fullField]
        )
        callback()
      }
    }
    return {
      addCellList: {
        bscID: '',
        cellID: '',
        cellName: '',
        bscName: '',
        lac: '',
        longitude: '',
        latitude: '',
        altitude: '',
        elevationAngle: '',
        directAngle: '',
        coverAngleBegin: '0',
        coverAngleEnd: '0',
        coverDistance: ''
      },
      isOpenMap: true,
      positionCell: [113.564221, 22.370364], // [113.564221, 22.370364]
      addCellMapEvents: {
        'click': (e) => {
          // 第一个参数是latitude，第二个是longitude
          let change = this.gcjToWgs(e.lnglat.lat, e.lnglat.lng)
          let longitude = change.lon
          let latitude = change.lat
          this.addCellList.longitude = Math.ceil(longitude * 100000) / 100000
          this.addCellList.latitude = Math.ceil(latitude * 100000) / 100000
          this.positionCell = [this.addCellList.latitude, this.addCellList.longitude]
        }
      },
      checkForm: [],
      result: false, // 用于判断表格输入信息是否符合
      rules: {
        bscID: [{ required: true, message: '不能为空！', trigger: 'blur' }],
        cellID: [{ required: true, message: '不能为空！', trigger: 'blur' }],
        cellName: [{ required: true, message: '不能为空！', trigger: 'blur' }],
        bscName: [{ required: true, message: '不能为空！', trigger: 'blur' }],
        lac: [{ required: true, message: '不能为空！', trigger: 'blur' }],
        longitude: [
          { required: true, message: '不能为空！', trigger: 'blur' },
          { validator: numberOnly, trigger: 'blur' }
        ],
        latitude: [
          { required: true, message: '不能为空！', trigger: 'blur' },
          { validator: numberOnly, trigger: 'blur' }
        ],
        altitude: [
          { required: true, message: '不能为空！', trigger: 'blur' },
          { validator: numberOnly, trigger: 'blur' }
        ],
        elevationAngle: [
          { required: true, message: '不能为空！', trigger: 'blur' },
          { validator: numberOnly, trigger: 'blur' }
        ],
        directAngle: [
          { required: true, message: '不能为空！', trigger: 'blur' },
          { validator: numberOnly, trigger: 'blur' }
        ],
        coverAngleBegin: [
          { required: true, message: '不能为空！', trigger: 'blur' },
          { validator: numberOnly, trigger: 'blur' }
        ],
        coverAngleEnd: [
          { required: true, message: '不能为空！', trigger: 'blur' },
          { validator: numberOnly, trigger: 'blur' }
        ],
        coverDistance: [
          { required: true, message: '不能为空！', trigger: 'blur' },
          { validator: numberOnly, trigger: 'blur' }
        ]
      },
      formList: ['form1', 'form2', 'form3', 'form4', 'form5', 'form7'], // 表单列表
      user: '',
      userFlag: false
    }
  },
  mounted () {
    this.user = this.getCookie('userID')
  },
  watch: {
    takePhotoLongitude (newVal, oldVal) {
      if (newVal) {
        this.positionCell = [newVal, this.takePhotoLatitude]
      }
    },
    takePhotoLatitude (newVal, oldVal) {
      if (newVal) {
        this.positionCell = [this.takePhotoLongitude, newVal]
      }
    }
  },
  computed: {
    takePhotoLongitude () {
      return this.addCellList.longitude
    },
    takePhotoLatitude () {
      return this.addCellList.latitude
    }
  },
  props: ['cellVisible'],
  methods: {
    clear () {
      for (var i in this.addCellList) {
        this.addCellList[i] = ''
      }
    },
    handleClick () {
      // 将增加任务页面表格默认都是没验证
      for (var i = 0; i < this.formList.length; i++) {
        this.checkForm[i] = true
      }
      // 检查每个form的验证是否符合
      for (i = 0; i < this.formList.length; i++) {
        this.checkRule(this.formList[i], i)
      }
      this.checkForm.forEach(element => {
        this.result = this.result || element
      })
      if (!this.result) {
        this.cellSubmit()
      } else {
        for (var j = 0; j < this.formList.length; j++) {
          this.checkForm[j] = true
        }
      }
      this.result = false
    },
    checkRule (formName, i) {
      this.$refs[formName].validate(valid => {
        if (valid) {
          this.checkForm[i] = false
        } else {
          console.log('error submit!!')
          return false
        }
      })
    },
    cellSubmit () {
      let params = new URLSearchParams()
      let path = this.setAPIPath('cell')
      params.append('bscID', this.addCellList.bscID)
      params.append('cellID', this.addCellList.cellID)
      params.append('bscName', this.addCellList.bscName)
      params.append('cellName', this.addCellList.cellName)
      params.append('lac', this.addCellList.lac)
      params.append('longitude', parseFloat(this.addCellList.longitude))
      params.append('latitude', parseFloat(this.addCellList.latitude))
      params.append('altitude', parseFloat(this.addCellList.altitude))
      params.append('elevationAngle', parseFloat(this.addCellList.elevationAngle))
      params.append('directAngle', parseFloat(this.addCellList.directAngle))
      params.append(
        'coverAngleBegin',
        parseFloat(this.addCellList.coverAngleBegin)
      )
      params.append('coverAngleEnd', parseFloat(this.addCellList.coverAngleEnd))
      params.append('coverDistance', parseInt(this.addCellList.coverDistance))
      this.$axios
        .post(path, params)
        .then(response => {
          if (response.data.code === 0) {
            this.openMsg('增加成功！', 'success', this)
            for (var i in this.addCellList) {
              this.addCellList[i] = ''
            }
            this.$emit('showFlag', this.userFlag)
          } else {
            this.errorMsg(response.data.code, this)
          }
        })
        .catch(error => {
          console.log(error)
        })
    }
  }
}
</script>
<style>
#amapCameraAddCell{
  height: 300px;
}
.submitBtn {
  margin-bottom: 10px;
}
.cellButton{
  margin-top: 20px;
}
.title {
  margin-top: 10px;
}
@media screen and (min-width: 1334px) {
  .el-form--inline .single {
    margin-right: 325px
  }
}
@media screen and (max-width: 1334px) {
  .cellButton .submitBtn{
    margin-left: 165px;
  }
}
</style>
