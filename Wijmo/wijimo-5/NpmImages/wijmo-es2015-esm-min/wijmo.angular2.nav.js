/*
    *
    * Wijmo Library 5.20183.550
    * http://wijmo.com/
    *
    * Copyright(c) GrapeCity, Inc.  All rights reserved.
    *
    * Licensed under the GrapeCity Commercial License.
    * sales@wijmo.com
    * wijmo.com/products/wijmo-5/license/
    *
    */
import*as wjcNav from"wijmo/wijmo.nav";var __glob="undefined"!=typeof window?window:self;import{Component,NgModule}from"@angular/core";import{ElementRef,Injector,Optional,forwardRef}from"@angular/core";import{Inject,SkipSelf}from"@angular/core";import{CommonModule}from"@angular/common";import{NG_VALUE_ACCESSOR}from"@angular/forms";import{WjDirectiveBehavior,WjDirectiveBaseModule,WjValueAccessorFactory}from"wijmo/wijmo.angular2.directiveBase";export var wjTreeViewMeta={selector:"wj-tree-view",template:``,inputs:["asyncBindings","wjModelProperty","isDisabled","childItemsPath","displayMemberPath","imageMemberPath","isContentHtml","showCheckboxes","autoCollapse","isAnimated","isReadOnly","allowDragging","expandOnClick","lazyLoadFunction","itemsSource","selectedItem","selectedNode","checkedItems"],outputs:["initialized","gotFocusNg: gotFocus","lostFocusNg: lostFocus","itemsSourceChangedNg: itemsSourceChanged","loadingItemsNg: loadingItems","loadedItemsNg: loadedItems","itemClickedNg: itemClicked","selectedItemChangedNg: selectedItemChanged","selectedItemChangePC: selectedItemChange","selectedNodeChangePC: selectedNodeChange","checkedItemsChangedNg: checkedItemsChanged","checkedItemsChangePC: checkedItemsChange","isCollapsedChangingNg: isCollapsedChanging","isCollapsedChangedNg: isCollapsedChanged","isCheckedChangingNg: isCheckedChanging","isCheckedChangedNg: isCheckedChanged","formatItemNg: formatItem","dragStartNg: dragStart","dragOverNg: dragOver","dropNg: drop","dragEndNg: dragEnd","nodeEditStartingNg: nodeEditStarting","nodeEditStartedNg: nodeEditStarted","nodeEditEndingNg: nodeEditEnding","nodeEditEndedNg: nodeEditEnded"],providers:[{provide:NG_VALUE_ACCESSOR,useFactory:WjValueAccessorFactory,multi:!0,deps:["WjComponent"]}]};export class WjTreeView extends wjcNav.TreeView{constructor(e,t,a){super(WjDirectiveBehavior.getHostElement(e,t)),this.isInitialized=!1;this._wjBehaviour=WjDirectiveBehavior.attach(this,e,t,a);this.created()}created(){}ngOnInit(){this._wjBehaviour.ngOnInit()}ngAfterViewInit(){this._wjBehaviour.ngAfterViewInit()}ngOnDestroy(){this._wjBehaviour.ngOnDestroy()}addEventListener(e,t,a,n=!1){let o=WjDirectiveBehavior,r=o.ngZone;r&&o.outsideZoneEvents[t]?r.runOutsideAngular(()=>{super.addEventListener(e,t,a,n)}):super.addEventListener(e,t,a,n)}};WjTreeView.meta={outputs:wjTreeViewMeta.outputs,changeEvents:{selectedItemChanged:["selectedItem","selectedNode"],checkedItemsChanged:["checkedItems"]}},WjTreeView.decorators=[{type:Component,args:[{selector:wjTreeViewMeta.selector,template:wjTreeViewMeta.template,inputs:wjTreeViewMeta.inputs,outputs:wjTreeViewMeta.outputs,providers:[{provide:"WjComponent",useExisting:forwardRef(()=>WjTreeView)},...wjTreeViewMeta.providers]}]}],WjTreeView.ctorParameters=(()=>[{type:ElementRef,decorators:[{type:Inject,args:[ElementRef]}]},{type:Injector,decorators:[{type:Inject,args:[Injector]}]},{type:void 0,decorators:[{type:Inject,args:["WjComponent"]},{type:SkipSelf},{type:Optional}]}]);export var wjTabPanelMeta={selector:"wj-tab-panel",template:`<div><ng-content></ng-content></div>`,inputs:["asyncBindings","wjModelProperty","isDisabled","isAnimated","autoSwitch","selectedIndex","selectedTab"],outputs:["initialized","gotFocusNg: gotFocus","lostFocusNg: lostFocus","selectedIndexChangedNg: selectedIndexChanged","selectedIndexChangePC: selectedIndexChange","selectedTabChangePC: selectedTabChange"],providers:[{provide:NG_VALUE_ACCESSOR,useFactory:WjValueAccessorFactory,multi:!0,deps:["WjComponent"]}]};export class WjTabPanel extends wjcNav.TabPanel{constructor(e,t,a){super(WjDirectiveBehavior.getHostElement(e,t)),this.isInitialized=!1;this._wjBehaviour=WjDirectiveBehavior.attach(this,e,t,a);this.created()}created(){}ngOnInit(){this.tabs.beginUpdate(),this._wjBehaviour.ngOnInit()}ngAfterViewInit(){this.selectedIndex<0&&this.tabs.length&&(this.selectedIndex=0),this._wjBehaviour.ngAfterViewInit()}ngOnDestroy(){this._wjBehaviour.ngOnDestroy()}addEventListener(e,t,a,n=!1){let o=WjDirectiveBehavior,r=o.ngZone;r&&o.outsideZoneEvents[t]?r.runOutsideAngular(()=>{super.addEventListener(e,t,a,n)}):super.addEventListener(e,t,a,n)}ngAfterContentInit(){this.tabs.endUpdate()}};WjTabPanel.meta={outputs:wjTabPanelMeta.outputs,changeEvents:{selectedIndexChanged:["selectedIndex","selectedTab"]}},WjTabPanel.decorators=[{type:Component,args:[{selector:wjTabPanelMeta.selector,template:wjTabPanelMeta.template,inputs:wjTabPanelMeta.inputs,outputs:wjTabPanelMeta.outputs,providers:[{provide:"WjComponent",useExisting:forwardRef(()=>WjTabPanel)},...wjTabPanelMeta.providers]}]}],WjTabPanel.ctorParameters=(()=>[{type:ElementRef,decorators:[{type:Inject,args:[ElementRef]}]},{type:Injector,decorators:[{type:Inject,args:[Injector]}]},{type:void 0,decorators:[{type:Inject,args:["WjComponent"]},{type:SkipSelf},{type:Optional}]}]);export var wjTabMeta={selector:"wj-tab",template:`<ng-content></ng-content>`,inputs:["wjProperty","isDisabled","isVisible"],outputs:["initialized"],providers:[]};export class WjTab extends wjcNav.Tab{constructor(e,t,a){super(document.createElement("div"),document.createElement("div")),this.isInitialized=!1,this.wjProperty="tabs";this._wjBehaviour=WjDirectiveBehavior.attach(this,e,t,a);this.created()}created(){}ngOnInit(){this._wjBehaviour.ngOnInit()}ngAfterViewInit(){this._wjBehaviour.ngAfterViewInit()}ngOnDestroy(){this._wjBehaviour.ngOnDestroy()}ngAfterContentInit(){let e=this._wjBehaviour.elementRef.nativeElement;this._setParts(e.children[0],e.children[1])}};WjTab.meta={outputs:wjTabMeta.outputs},WjTab.decorators=[{type:Component,args:[{selector:wjTabMeta.selector,template:wjTabMeta.template,inputs:wjTabMeta.inputs,outputs:wjTabMeta.outputs,providers:[{provide:"WjComponent",useExisting:forwardRef(()=>WjTab)},...wjTabMeta.providers]}]}],WjTab.ctorParameters=(()=>[{type:ElementRef,decorators:[{type:Inject,args:[ElementRef]}]},{type:Injector,decorators:[{type:Inject,args:[Injector]}]},{type:void 0,decorators:[{type:Inject,args:["WjComponent"]},{type:SkipSelf},{type:Optional}]}]);let moduleExports=[WjTreeView,WjTabPanel,WjTab];export class WjNavModule{};WjNavModule.decorators=[{type:NgModule,args:[{imports:[WjDirectiveBaseModule,CommonModule],declarations:[...moduleExports],exports:[...moduleExports]}]}],WjNavModule.ctorParameters=(()=>[]);